image: $SKA_K8S_TOOLS_BUILD_DEPLOY

default:
  tags:
    - ska-k8s

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  MINIKUBE: "false"

stages:
  - lint
  - build
  - test #BDD will come later, just python tests for now if required
  - deploy
  - integration
  - staging # - join-reports
  - pages
  - publish  # might not need in our case
  - scan

# Include CI templates
include:
# OCI Images
# do a custom set of build and publish stages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

# Python packages build,lint, test and publish
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'

# Jupyter notebook linting and testing
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/notebook.gitlab-ci.yml' # this is for using jupyter notebooks

# Helm Charts
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'

# Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'

# .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

# k8s steps
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/k8s.gitlab-ci.yml'

# changelog release page
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml' 

# deploy steps
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/deploy.gitlab-ci.yml' 


  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python-lint.gitlab-ci.yml'


  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs-pages.gitlab-ci.yml'


  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/deploy.integration.gitlab-ci.yml'

  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/deploy.staging.gitlab-ci.yml"

  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

notebook-lint:
  allow_failure: true 

notebook-test:
  rules:
    - when: never

python-gemnasium-scan:
  rules:
    - when: never

python-test: 
  rules:
    - when: never

stop-k8s-test: 
  rules:
    - when: never

k8s-test: 
  rules:
    - when: never

deploy-integration:
  rules:
    - when: never
 
info-integration:
  rules:
    - when: never

stop-integration:
  rules:
    - when: never

redeploy-integration:
  rules:
    - when: never




deploy-tmc-with-sdp:
  tags:
    - ska-k8s
  variables:
    TELESCOPE: 'SKA-low'
    PORT: "10000"
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-tmc-sdp'
    KUBE_NAMESPACE_SDP: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-sdp'
    SERVICE_ACCOUNT: "ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-tmc-sdp"
    SDP_SIMULATION_ENABLED: 'false'
  script:
    - make cred SERVICE_ACCOUNT=$SERVICE_ACCOUNT
    - make cred KUBE_NAMESPACE=$KUBE_NAMESPACE_SDP
    - '[ -f .make/k8s.mk ] || (echo "File k8s.mk not included in Makefile; exit 1")'
    - 'make help | grep k8s-test'
    - make k8s-install-chart SDP_PROCCONTROL_REPLICAS=0
    - make k8s-wait 
    - make k8s-wait KUBE_APP="ska-sdp"
    - make k8s-test MARK='tmc_sdp_unhappy_path'
    - make k8s-install-chart SDP_PROCCONTROL_REPLICAS=1
    - make k8s-wait
    - make k8s-wait KUBE_APP="ska-sdp"
    - make k8s-test MARK='tmc_sdp'
  after_script:
    - pip3 install -q -U ska-ser-xray
    - XRAY_TEST_RESULT_FILE="build/cucumber.json" make xray-publish
  environment:
    name: test/$CI_COMMIT_REF_SLUG
    on_stop: stop-k8s-test-tmc-with-sdp

stop-k8s-test-tmc-with-sdp:
  extends:
    - stop-k8s-test
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA-tmc-sdp'
    SDP_SIMULATION_ENABLED: 'false'




deploy-low-integration:
  extends: deploy-integration
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  variables:
    KUBE_NAMESPACE: "integration-ska-low"
  environment:
    name: integration-ska-low
    on_stop: stop-low-integration

info-low-integration:
  extends: info-integration
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  needs:
    - deploy-low-integration
  variables:
    KUBE_NAMESPACE: "integration-ska-low"
  environment:
    name: integration-ska-low

stop-low-integration:
  extends: stop-integration
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  needs:
    - deploy-low-integration
  variables:
    KUBE_NAMESPACE: "integration-ska-low"
  environment:
    name: integration-ska-low
    action: stop

redeploy-low-integration:
  extends: redeploy-integration
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  variables:
    KUBE_NAMESPACE: "integration-ska-low"
  environment:
    name: integration-ska-low



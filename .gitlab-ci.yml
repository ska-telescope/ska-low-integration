image: $SKA_K8S_TOOLS_BUILD_DEPLOY

default:
  tags:
    - ska-k8s

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  MINIKUBE: "false"

stages:
  - lint
  - build
  - test #BDD will come later, just python tests for now if required
  - deploy
  - integration
  - staging # - join-reports
  - pages
  - publish  # might not need in our case
  - scan

# Include CI templates
include:
# OCI Images
# do a custom set of build and publish stages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

# Python packages build,lint, test and publish
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'

# Jupyter notebook linting and testing
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/notebook.gitlab-ci.yml' # this is for using jupyter notebooks

# Helm Charts
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'

# Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'

# .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

# k8s steps
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/k8s.gitlab-ci.yml'

# changelog release page
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml' 

# deploy steps
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/deploy.gitlab-ci.yml' 


  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs-pages.gitlab-ci.yml'


  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/deploy.integration.gitlab-ci.yml'


deploy-staging:
  rules:
    - when: never

info-staging:
  rules:
    - when: never

stop-staging:
  rules:
    - when: never

redeploy-staging:
  rules:
    - when: never


notebook-lint:
  allow_failure: true 

notebook-test:
  rules:
    - when: never

python-gemnasium-scan:
  rules:
    - when: never

python-test: 
  rules:
    - when: never



k8s-test: 
  rules:
    - when: never


deploy-integration:
  rules:
    - when: never

stop-k8s-test: 
  rules:
    - when: never
 
info-integration:
  rules:
    - when: never

stop-integration:
  rules:
    - when: never

redeploy-integration:
  rules:
    - when: never


deploy-tmc-with-sdp:
  extends: deploy-low-integration

  variables:
    TELESCOPE: 'SKA-low'
    KUBE_NAMESPACE: 'integration-ska-low-tmc-sdp'
    KUBE_NAMESPACE_SDP: 'integration-ska-tmc-low-sdp'
    SDP_SIMULATION_ENABLED: 'false'
    
  environment:
    name: integration-sdp-$CI_PROJECT_NAME
    on_stop: stop-k8s-test-tmc-with-sdp
  rules:
  - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH


stop-k8s-test-tmc-with-sdp:
  extends:
    - stop-low-integration
  variables:
    KUBE_NAMESPACE: 'integration-ska-low-tmc-sdp'
    SDP_SIMULATION_ENABLED: 'false'
    KUBE_NAMESPACE_SDP: 'integration-ska-tmc-low-sdp'
  environment:
    name: integration-sdp-$CI_PROJECT_NAME
    action: stop
  needs:
    - deploy-tmc-with-sdp 
  rules:
  - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH

deploy-tmc-with-csp:
  extends: deploy-low-integration
  variables:
    TELESCOPE: 'SKA-low'
    KUBE_NAMESPACE: 'integration-ska-low-tmc-csp'
    CSP_SIMULATION_ENABLED: 'false'
    SDP_DEPLOY: 'false'
    
  environment:
    name: integration-csp-$CI_PROJECT_NAME
    on_stop: stop-k8s-test-tmc-with-csp
  rules:
  - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH

stop-k8s-test-tmc-with-csp:
  extends:
    - stop-low-integration
  variables:
    KUBE_NAMESPACE: 'integration-ska-low-tmc-csp'
    CSP_SIMULATION_ENABLED: 'false'
    SDP_DEPLOY: 'false'
  environment:
    name: integration-csp-$CI_PROJECT_NAME
    action: stop
  needs:
    - deploy-tmc-with-csp
  rules:
  - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH


deploy-tmc-with-mccs:
  extends: deploy-low-integration
  variables:
    TELESCOPE: 'SKA-low'
    KUBE_NAMESPACE: 'integration-ska-low-tmc-mccs'
    MCCS_SIMULATION_ENABLED: 'false'
    SDP_DEPLOY: 'false'

  environment:
    name: integration-mccs-$CI_PROJECT_NAME
    on_stop: stop-k8s-test-tmc-with-mccs
  rules:
  - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH

stop-k8s-test-tmc-with-mccs:
  extends:
    - stop-low-integration
  needs:
    - deploy-tmc-with-mccs
  variables:
    KUBE_NAMESPACE: 'integration-ska-low-tmc-mccs'
    MCCS_SIMULATION_ENABLED: 'false'
    SDP_DEPLOY: 'false'
  environment:
    name: integration-mccs-$CI_PROJECT_NAME
    action : stop
  rules:
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH


deploy-low-integration:
  extends: deploy-integration
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  variables:
    KUBE_NAMESPACE: "integration-low"
  environment:
    name: integration-ska-low
    on_stop: stop-low-integration
  when: manual

info-low-integration:
  extends: info-integration
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  needs:
    - deploy-low-integration
  variables:
    KUBE_NAMESPACE: "integration-ska-low"
  environment:
    name: integration-ska-low
  when: manual

stop-low-integration:
  extends: stop-integration
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  needs:
    - deploy-low-integration
  variables:
    KUBE_NAMESPACE: "integration-ska-low"
  environment:
    name: integration-ska-low
    action: stop
  when: manual

redeploy-low-integration:
  extends: redeploy-integration
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  variables:
    KUBE_NAMESPACE: "integration-ska-low"
  environment:
    name: integration-ska-low
  when: manual


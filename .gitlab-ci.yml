image: $SKA_K8S_TOOLS_BUILD_DEPLOY

default:
  tags:
    - ska-k8s

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  MINIKUBE: "false"

stages:
  - lint
  - build
  - deploy
  - test #BDD will come later, just python tests for now if required
  - integration
  - staging # - join-reports
  - pages
  - publish  # might not need in our case
  - scan

# Include CI templates
include:
# OCI Images
# do a custom set of build and publish stages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

# Python packages build,lint, test and publish
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'

# Jupyter notebook linting and testing
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/notebook.gitlab-ci.yml' # this is for using jupyter notebooks

# Helm Charts
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'

# Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'

# .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

# k8s steps
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/k8s.gitlab-ci.yml'

# changelog release page
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml' 

# # deploy steps
#   - project: 'ska-telescope/templates-repository'
#     file: 'gitlab-ci/includes/deploy.gitlab-ci.yml' 

notebook-lint:
  allow_failure: true 

notebook-test:
  rules:
    - when: never

python-gemnasium-scan:
  rules:
    - when: never

python-test: 
  rules:
    - when: never

stop-k8s-test: 
  rules:
    - when: never

k8s-test: 
  rules:
    - when: never

# deploy-integration:
#   rules:
#     - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
 
# info-integration:
#   rules:
#     - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

# stop-integration:
#   rules:
#     - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

deploy-integration:
  tags:
    - ska-k8s
  stage: deploy
  variables:
    KUBE_NAMESPACE: "integration-$CI_PROJECT_NAME"
  environment:
    name: integration-$CI_PROJECT_NAME
    on_stop: stop-integration
  script:
    - make k8s-install-chart
    - make k8s-wait
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH


# redeploy-integration:
#   rules:
#     - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    
# deploy-low-integration:
#   extends: deploy-integration
#   rules:
#     - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
#   variables:
#     KUBE_NAMESPACE: "integration-ska-low"
#   environment:
#     name: integration-ska-low
#     on_stop: stop-low-integration

system-level-testing:
  stage: test
  trigger:
    project: ska-telescope/ska-sw-integration-testing
    branch: hm-535
    strategy: depend 

# info-low-integration:
#   extends: info-integration
#   rules:
#     - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
#   needs:
#     - deploy-low-integration
#   variables:
#     KUBE_NAMESPACE: "integration-ska-low"
#   environment:
#     name: integration-ska-low

stop-integration:
  tags:
    - ska-k8s
  stage: integration
  when: manual
  needs:
    - deploy-integration
  variables:
    KUBE_NAMESPACE: "integration-$CI_PROJECT_NAME"
  environment:
    name: integration-$CI_PROJECT_NAME
    action: stop
  script:
    - make k8s-uninstall-chart
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all
    - make k8s-delete-namespace
  rules:
  - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH


# redeploy-low-integration:
#   extends: redeploy-integration
#   rules:
#     - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
#   variables:
#     KUBE_NAMESPACE: "integration-ska-low"
#   environment:
#     name: integration-ska-low


